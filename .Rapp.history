write.table(genreNameList, file = "genreNameList.csv", sep = ",", col.names = NA)
write.csv(genreNameList)
genreNameList
sort(table(playedIml[,2]), decreasing = T)
sort(table(iml[,2]), decreasing = T)
playedIml
clear
sort(table(iml[,2]), decreasing = T))
playedIml
sort(table(iml[,2]), decreasing = T))
sort(table(iml[,2]), decreasing = T)
playedIml
table(playedIml[,2])
playedIml
table(playedIml[,2])
playedIml
table(playedIml[,2])
names(playedIml)
names(playedIml$gener)
names(playedIml$genre)
playedIml$genre
Soundtrack
playedIml$genre
names(playedIml$genre)
sort(table(playedIml[,2]), decreasing = T)
names(sort(table(playedIml[,2]), decreasing = T))
names(iml[,2])
names(table(iml[,2]))
names(sort(table(playedIml[,2]), decreasing = T))
sort(table(playedIml[,2]), decreasing = T)
sort(table(iml[,2]), decreasing = T)
playedIml[,2])
playedIml[,2]
playedIml[,2])[0]
playedIml[,2])[1]
playedIml[,2]
playedIml[,2][1]
playedIml[,2][0]
playedIml[,2][1863]
playedIml[,2][1862]
playedIml[,2][186`]
playedIml[,2][1861]
]
[[[;]]]
'dv'
;asf
a
sdf
playedIml[,2][1860]
playedIml[,2][1863]
playedIml[,2][1864]
playedIml[,2][0]
sort(table(playedIml[,2]), decreasing = T)
sort(table(playedIml[,2][1:100]), decreasing = T)
help(help)
sort(table(playedIml[,2][1:100]), decreasing = T, drop = ture)
sort(table(playedIml[,2][1:100]), decreasing = T, drop = true)
help(table))
help(table)
sort(table(playedIml[,2][1:100], drop = true), decreasing = T)
sort(table(playedIml[,2][1:100], drop = TRUE), decreasing = T)
sort(table(playedIml[,2][1:100, drop = TRUE]), decreasing = T)
sort(table(playedIml[,2]), decreasing = T)
sort(table(iml[,2]), decreasing = T)
sort(table(playedIml[,2], drop = TRUE), decreasing = T)
sort(table(playedIml[,2, drop = TRUE]), decreasing = T)
sort(table(playedIml[,2], drop = TRUE), decreasing = T)
sort(table(playedIml[,2, drop = TRUE]), decreasing = T)
sort(table(playedIml[,2][1:100], drop = true), decreasing = T)
sort(table(playedIml[,2][1:100, drop = TRUE]), decreasing = T)
sort(table(playedIml[,2][, drop = TRUE]), decreasing = T)
sort(table(playedIml[,2]), decreasing = T)
sort(table(iml[,2]), decreasing = T)
sort(table(playedIml[,2][, drop = TRUE]), decreasing = T)
names(sort(table(playedIml[,2][, drop = TRUE]), decreasing = T))
source("imlAnalyzer.r")
graphData
ort(table(playedIml[,2][, drop = TRUE]), decreasing = T)
sort(table(playedIml[,2][, drop = TRUE]), decreasing = T)
ort(table(playedIml[,2][, drop = TRUE]), decreasing = T)
sort(table(playedIml[,2][, drop = TRUE]), decreasing = T)
length(ort(table(playedIml[,2][, drop = TRUE]), decreasing = T))
length(sort(table(playedIml[,2][, drop = TRUE]), decreasing = T))
length(sort(table(playedIml[,2]), decreasing = T))
graphData
table(iml[,2]))
table(iml[,2])
table(playedIml[,2]))
table(playedIml[,2])
table(iml[,2])
table(playedIml[,2])
table(playedIml[,2][, drop = false])
table(playedIml[,2][, drop = FALSE])
table(playedIml[,2][, drop = TRUE])
length(table(playedIml[,2][, drop = TRUE]))
clc
source("imlAnalyzer.R")
graphData
playedIml
length(graphData)
graphData
playedIml
length(table(playedIml[,2][, drop = TRUE]))
graph
graphData
19*7
names(sort(table(playedIml[,2][, drop = TRUE]), decreasing = T))
names(sort(table(playedIml[,2][, drop = TRUE])))
names(sort(table(playedIml[,2])))
names(sort(table(playedIml[,2][, drop = TRUE]), decreasing = T))
names(sort(table(playedIml[,2]), decreasing = T))
targetGenreName = names(sort(table(iml[,2]), decreasing = T))[i]
targetGenreName = names(sort(table(iml[,2]), decreasing = T))
targetGenreName
graphData  = c()#
 for(weekNum in 1 : 7){#
	 for(i in 1:length(table(playedIml[,2][, drop = TRUE]))){#
		targetGenreName = names(sort(table(playedIml[,2]), decreasing = T))[i]#
		imlWeekGenre = playedIml[  as.POSIXlt(playedIml[,1])$wday==weekNum-1 & playedIml$genre == targetGenreName,]#
	    imlWeekGenreTime = imlWeekGenre[,1]#
	    wdayName = switch(weekNum, "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" )#
	    histData = hist(as.POSIXlt(imlWeekGenreTime)$hour+as.POSIXlt(imlWeekGenreTime)$min/60+as.POSIXlt(imlWeekGenreTime)$sec/60/60, main=paste(wdayName, "_", targetGenreName, sep = "")  , breaks=seq(0,24,1), col = hsv(1*i/length(table(playedIml[,2])), 1, 1, alpha = 0.5), xlab = "Time", ylab = "Frequency", xlim = c(0,23), ylim = c(0, histMax)) #
    	graphData = rbind(graphData, histData$counts)#
    	quartz.save(paste("~/dropbox/thesis/out_png/", wdayName, "_", i, targetGenreName, ".png", sep=""))	#
	}#
}
ml$playCount==1 & playedIml$genre == "Jazz",]#
 graphData  = c()#
 for(weekNum in 1 : 7){#
	 for(i in 1:length(table(playedIml[,2][, drop = TRUE]))){#
		targetGenreName = names(sort(table(playedIml[,2]), decreasing = T))[i]#
		imlWeekGenre = playedIml[  as.POSIXlt(playedIml[,1])$wday==weekNum-1 & playedIml$genre == targetGenreName,]#
	    imlWeekGenreTime = imlWeekGenre[,1]#
	    wdayName = switch(weekNum, "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" )#
	    histData = hist(as.POSIXlt(imlWeekGenreTime)$hour+as.POSIXlt(imlWeekGenreTime)$min/60+as.POSIXlt(imlWeekGenreTime)$sec/60/60, main=paste(wdayName, "_", targetGenreName, sep = "")  , breaks=seq(0,24,1), col = hsv(1*i/length(table(playedIml[,2])), 1, 1, alpha = 0.5), xlab = "Time", ylab = "Frequency", xlim = c(0,23), ylim = c(0, histMax)) #
    	graphData = rbind(graphData, histData$counts)#
    	quartz.save(paste("~/dropbox/thesis/out_png/", wdayName, "_", i, "_", targetGenreName, ".png", sep=""))	#
	}#
}
graphData  = c()#
 for(weekNum in 1 : 7){#
	 for(i in 1:length(table(playedIml[,2][, drop = TRUE]))){#
		targetGenreName = names(sort(table(playedIml[,2]), decreasing = T))[i]#
		imlWeekGenre = playedIml[  as.POSIXlt(playedIml[,1])$wday==weekNum-1 & playedIml$genre == targetGenreName,]#
	    imlWeekGenreTime = imlWeekGenre[,1]#
	    wdayName = switch(weekNum, "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" )#
	    histData = hist(as.POSIXlt(imlWeekGenreTime)$hour+as.POSIXlt(imlWeekGenreTime)$min/60+as.POSIXlt(imlWeekGenreTime)$sec/60/60, main=paste(wdayName, "_", targetGenreName, sep = "")  , breaks=seq(0,24,1), col = hsv(1*i/length(table(playedIml[,2])), 1, 1, alpha = 0.5), xlab = "Time", ylab = "Frequency", xlim = c(0,23), ylim = c(0, histMax)) #
    	graphData = rbind(graphData, histData$counts)#
    	quartz.save(paste("~/dropbox/thesis/out_png/", wdayName, "_", i,"_", targetGenreName, ".png", sep=""))	#
	}#
}
graphData  = c()#
 for(weekNum in 1 : 7){#
	 for(i in 1:length(table(playedIml[,2][, drop = TRUE]))){#
		targetGenreName = names(sort(table(playedIml[,2]), decreasing = T))[i]#
		imlWeekGenre = playedIml[  as.POSIXlt(playedIml[,1])$wday==weekNum-1 & playedIml$genre == targetGenreName,]#
	    imlWeekGenreTime = imlWeekGenre[,1]#
	    wdayName = switch(weekNum, "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" )#
	    histData = hist(as.POSIXlt(imlWeekGenreTime)$hour+as.POSIXlt(imlWeekGenreTime)$min/60+as.POSIXlt(imlWeekGenreTime)$sec/60/60, main=paste(wdayName, "_", targetGenreName, sep = "")  , breaks=seq(0,24,1), col = hsv(1*i/length(table(playedIml[,2])), 1, 1, alpha = 0.5), xlab = "Time", ylab = "Frequency", xlim = c(0,23), ylim = c(0, histMax)) #
    	graphData = rbind(graphData, histData$counts)#
    	quartz.save(paste("~/dropbox/thesis/out_png/", weekNum, wdayName, "_", i,"_", targetGenreName, ".png", sep=""))	#
	}#
}
graphData  = c()#
 for(weekNum in 1 : 7){#
	 for(i in 1:length(table(playedIml[,2][, drop = TRUE]))){#
		targetGenreName = names(sort(table(playedIml[,2]), decreasing = T))[i]#
		imlWeekGenre = playedIml[  as.POSIXlt(playedIml[,1])$wday==weekNum-1 & playedIml$genre == targetGenreName,]#
	    imlWeekGenreTime = imlWeekGenre[,1]#
	    wdayName = switch(weekNum, "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" )#
	    histData = hist(as.POSIXlt(imlWeekGenreTime)$hour+as.POSIXlt(imlWeekGenreTime)$min/60+as.POSIXlt(imlWeekGenreTime)$sec/60/60, main=paste(wdayName, "_", targetGenreName, sep = "")  , breaks=seq(0,24,1), col = hsv(1*i/length(table(playedIml[,2])), 1, 1, alpha = 0.5), xlab = "Time", ylab = "Frequency", xlim = c(0,23), ylim = c(0, histMax)) #
    	graphData = rbind(graphData, histData$counts)#
    	quartz.save(paste("~/dropbox/thesis/out_png/", weekNum, "_", wdayName, "_", i,"_", targetGenreName, ".png", sep=""))	#
	}#
}
length(table(playedIml[,2]))
length(table(playedIml[,2][, dropbox = true]))
length(table(playedIml[,2][, dropbox = TRUE]))
length(table(playedIml[,2][,drop = TRUE]))
length(table(playedIml[,2][, drop = TRUE]))
source("imlAnalyzer.R")
source("imlanalyzer.r")
playedIml
playedIml[,]
playedIml[]
playedIml[c(true, true, false)]
playedIml[c(true, true, false),]
iml[,4]!=0
playedIml[c(TRUE, TRUE, FALSE),]
playedIml[c(TRUE, TRUE, FALSE)]
playedIml[c(TRUE, TRUE, FALSE),]
playedIml[c(TRUE, FALSE),]
playedIml[]
iml
source("imlanalyzer.r")
foo
foobar
foobar = c{2,3,5}
foobar = c(2,3,5)
foobar
foobar=c()
foobar
source("imlanalyzer.r")
iml[2036,][1]-round(iml[2036,][3]/1000)
dim(iml)
iml[2036,][1]
iml[2036,]
iml[sort.list(iml$Played Date),]
iml[sort.list(iml$PlayedDate),]
iml[sort.list(iml$playedDate),]
names(iml)
iml[sort.list(iml$playDate),]
iml[2036,][1]-round(iml[2036,][3]/1000)
iml[2036,][1]
round(iml[2036,][3]/1000)
iml[2036,]
iml[1:2036,]
iml[1:2036,][1]-round(iml[1:2036,][3]/1000)
iml[1:2036,]
iml
iml[1:2036,][1]-round(iml[1:2036,][3]/1000)
selectedItems
source("imlanalyzer.r")
foo = c{1,2,3}
foo = c(1,2,3)
foo[1]
foo[3]
foo[4]
foo[2]
source("imlanalyzer.r")
source("imlanalyzer.r")
source("imlanalyzer.r")
source("imlanalyzer.r")
source("imlanalyzer.r")
source("imlanalyzer.r")
source("imlanalyzer.r")
source("imlanalyzer.r")
source("imlanalyzer.r")
iml
iml[iml[,4]==false]
iml[iml[,4]=="false"]
iml[,4]
iml[,3]
iml[,1]
iml[,5]
iml[,5]==false
iml[,5]=="false"
iml[,5]==false
iml[,5]=="false"
iml[iml[,5]=="false"]
iml[iml[,5]=="false"]
iml[iml[,5]=="false",]
iml[iml[,5]=="false",]
iml
iml[iml[,5]=="false",]
iml[iml[,5]=="true",]
checkedIml = iml[iml[,5]=="false",]
checkedIMl
checkediml
checkedIml
checkedIml[,3]
checkedIml[,4]
iml[1,]
checkedIml[,2]
checkedIml[,2][drop = true]
checkedIml[,2][, drop = TRUE]
checkedIml[,2][, drop = TRUE]
checkedIml[,2]
hist(checkedIml[,2])
table(checkedIml[,2])
table(checkedIml[,2][, drop = TRUE])
checkedIml[,2][, drop = TRUE]
checkedIml[,2]
table(checkedIml[,2][, drop = TRUE])
table(checkedIml[,2])
names(sort(table(playedIml[,2][, drop = TRUE]), decreasing = T))
names(sort(table(playedIml[,2], decreasing = T))
)
names(sort(table(playedIml[,2]), decreasing = T))
names(sort(table(playedIml[,2], decreasing = T))
)
table(checkedIml[,2])
table(sort(checkedIml[,2], decreasing = T)
)
table(sort(checkedIml[,2], decreasing = T))
sort(table(checkedIml[,2], decreasing = T))
sort(table(checkedIml[,2]), decreasing = T)
write.csv(sort(table(checkedIml[,2]), decreasing = T), "checkedImlGenreTable.csv")
source("imlanalyzer.r")
source("imlanalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
source("checkedImlAnalyzer.r")
